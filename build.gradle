plugins {
    id 'java'
    id 'application'
}

group = 'org.drw.standard'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'

    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
}

test {
    useJUnitPlatform()
}

application {
    mainClass = 'org.drw.standard.TetrisGame'
}

jar {
    manifest {
        attributes 'Main-Class': 'org.drw.standard.TetrisGame'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    // Include all source code in the jar for interview purposes
    from('src/main/java') {
        into 'src/main/java'
    }
    from('src/test/java') {
        into 'src/test/java'
    }
    from('src/main/resources') {
        into 'src/main/resources'
    }
    from('src/test/resources') {
        into 'src/test/resources'
    }
    // Include project configuration and documentation files
    from('.') {
        include 'build.gradle'
        include 'README.md'
        include 'settings.gradle'
        include 'gradlew'
        include 'gradlew.bat'
        include 'LICENSE'
        into 'project-files'
    }
    // Include gradle wrapper directory
    from('gradle') {
        into 'project-files/gradle'
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveBaseName = 'tetris'
    archiveVersion = ''
    archiveExtension = 'jar'
}